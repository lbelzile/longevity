% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/npecdf.R
\name{np.ecdf}
\alias{np.ecdf}
\title{Nonparametric estimation of the survival function}
\usage{
np.ecdf(
  dat,
  thresh,
  rcens = NULL,
  ltrunc = NULL,
  rtrunc = NULL,
  tol = 1e-12,
  vcov = FALSE
)
}
\arguments{
\item{dat}{vector of exceedances of length \code{n}, i.e., observations that are larger than the thresh}

\item{thresh}{double thresh}

\item{rcens}{logical vector of length \code{n}, where \code{rcens} is \code{TRUE} for right-censored observation and \code{FALSE} otherwise.}

\item{ltrunc}{vector of size \code{n} of lower truncation time}

\item{rtrunc}{vector of size \code{n} of upper truncation time}

\item{tol}{double, relative tolerance for convergence of the EM algorithm}

\item{vcov}{logical; should the observed information matrix be computed? Default to \code{FALSE}}
}
\value{
an object of class \code{stepfun}
}
\description{
The survival function is obtained through the EM algorithm
described in Turnbull (1976) for left-truncated right-censored
or else doubly truncated observations; censoring is assumed to be
non-informative. The survival function changes only
at the J distinct exceedances \eqn{y_i-u} and truncation points.
}
\details{
The unknown parameters of the model are \eqn{p_j (j=1, \ldots, J)}
subject to the constraint that \eqn{\sum_{j=1}^J p_j=1}.
}
\examples{
set.seed(2021)
n <- 20L
# Create fake data
ltrunc <- pmax(0, runif(n, -0.5, 1))
rtrunc <- runif(n, 6, 10)
dat <- r_dtrunc_elife(n = n, scale = 1,
               shape = -0.1,
               lower = ltrunc,
               upper = rtrunc,
               family = "gp")
thresh <- 0
npi <- np.ecdf(dat = dat, thresh = thresh,
rtrunc = rtrunc, ltrunc = ltrunc)
}
